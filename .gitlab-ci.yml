build:
  stage: build
  parallel:
    matrix:
      - IMAGE: debian-build
        TAG: [docker-amd64, docker-aarch64-ci, docker-armhf]
        #TAG: [docker-amd64, docker-aarch64-ci, docker-armhf, docker-riscv64-ci]
  image: registry.git.beagleboard.org/jkridner/${IMAGE}
  tags:
    - ${TAG}
  before_script:
    - apt update && apt install -y --no-install-recommends build-essential devscripts debhelper cmake git libarchive-dev
      libcurl4-gnutls-dev qtbase5-dev qtbase5-dev-tools qtdeclarative5-dev libqt5svg5-dev qttools5-dev libgnutls28-dev
      qml-module-qtquick2 qml-module-qtquick-controls2 qml-module-qtquick-layouts qml-module-qtquick-templates2
      qml-module-qtquick-window2 qml-module-qtgraphicaleffects liblzma-dev
  script:
    - debuild -uc -us
    - mkdir -p public
    - cp ../*.deb public/
  artifacts:
    paths:
      - public

build-macos:
  stage: build
  tags:
    - macos
  script:
    - export PATH="$PATH:/opt/local/bin"
    - mkdir -p public
    - mkdir build && cd build && cmake ../src
    - make
    - security unlock-keychain -p "${MACOS_PASSWORD}" /Users/jkridner/Library/Keychains/login.keychain
    - /opt/local/libexec/qt5/bin/macdeployqt bb-imager.app -codesign="${MACOS_KEY_ID}"
    - otool -L bb-imager.app/Contents/MacOS/bb-imager
      #- codesign --force --verify --verbose --sign "${MACOS_KEY_ID}" bb-imager.app/Contents/Frameworks/*
      #- codesign --force --verify --verbose --sign "${MACOS_KEY_ID}" bb-imager.app/Contents/Plugins/*/*.dylib
    - codesign --deep --force --verify --verbose --sign "${MACOS_KEY_ID}" bb-imager.app
    - rm -rf bb-imager.dmg.tmp && mkdir -p bb-imager.dmg.tmp
    - cp -R bb-imager.app bb-imager.dmg.tmp
    - hdiutil create -volname "BeagleBoard Imager" -srcfolder bb-imager.dmg.tmp -ov -format UDZO bb-imager.dmg
    - codesign --sign "${MACOS_KEY_ID}" bb-imager.dmg
    - ditto -c -k --sequesterRsrc --keepParent bb-imager.dmg bb-imager.zip
    - xcrun notarytool submit bb-imager.zip --keychain-profile "notary-credentials" --wait
    - xcrun stapler staple bb-imager.dmg
    - spctl -a -v --type install bb-imager.dmg
    - cp -r bb-imager.app bb-imager.dmg ../public
  artifacts:
    paths:
      - public

#build-windows:
  #stage: build
  #tags: ["windows"]
  #script:
  #artifacts:
    #paths:
      #- public

pages:
  image: registry.git.beagleboard.org/jkridner/debian-build
  stage: deploy
  tags:
    - docker-amd64
  dependencies:
    - "build: [debian-build, docker-amd64]"
    - "build: [debian-build, docker-aarch64-ci]"
    - "build: [debian-build, docker-armhf]"
    #- "build: [debian-build, docker-riscv64-ci]"
    - "build-macos"
    #- "build-windows"
  script:
    - apindex public
  artifacts:
    paths:
      - public

