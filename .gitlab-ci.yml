build:
  stage: build
  parallel:
    matrix:
      - IMAGE: debian-build
        TAG: [docker-amd64, docker-aarch64-ci, docker-armhf, docker-riscv64-ci]
  image: registry.git.beagleboard.org/jkridner/${IMAGE}
  tags:
    - ${TAG}
  before_script:
    - apt update && apt install -y --no-install-recommends build-essential devscripts debhelper cmake git libarchive-dev
      libcurl4-gnutls-dev qtbase5-dev qtbase5-dev-tools qtdeclarative5-dev libqt5svg5-dev qttools5-dev libgnutls28-dev
      qml-module-qtquick2 qml-module-qtquick-controls2 qml-module-qtquick-layouts qml-module-qtquick-templates2
      qml-module-qtquick-window2 qml-module-qtgraphicaleffects liblzma-dev
  script:
    - debuild -uc -us
    - mkdir -p public
    - cp ../*.deb public/
  artifacts:
    paths:
      - public

build-macos:
  stage: build
  tags: ["macos"]
  script:
    - mkdir -p public
    - mkdir build && cd build && cmake ../src
    - make
    - codesign --deep --force --verify --verbose --sign "91DAB8486F148C8EDD134138F61F0AD5B3EFA59B" --options runtime bb-imager.app
    - create-dmg --volname "BeagleBoard Imager" --codesign "91DAB8486F148C8EDD134138F61F0AD5B3EFA59B" --window-size 800 400 --app-drop-link 600 185 --icon-size 100 --icon bb-imager.app 200 190 bb-imager.dmg bb-imager.app
    - cp -r bb-imager.app bb-imager.dmg ../public
  artifacts:
    paths:
      - public

#build-windows:
  #stage: build
  #tags: ["windows"]
  #script:
  #artifacts:
    #paths:
      #- public

pages:
  image: registry.git.beagleboard.org/jkridner/debian-build
  stage: deploy
  dependencies:
    - "build: [debian-build, docker-amd64]"
    - "build: [debian-build, docker-aarch64-ci]"
    - "build: [debian-build, docker-armhf]"
    - "build: [debian-build, docker-riscv64-ci]"
    - "build-macos"
    #- "build-windows"
  script:
    - apindex public
  artifacts:
    paths:
      - public

