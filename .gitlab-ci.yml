build-debian:
  stage: build
  parallel:
    matrix:
      - IMAGE: debian-build
        TAG: [docker-amd64, docker-aarch64-ci]
        #TAG: [docker-amd64, docker-aarch64-ci, docker-armhf]
        #TAG: [docker-amd64, docker-aarch64-ci, docker-armhf, docker-riscv64-ci]
  image: registry.git.beagleboard.org/jkridner/${IMAGE}
  tags:
    - ${TAG}
  before_script:
    - apt update && apt install -y --no-install-recommends build-essential devscripts debhelper cmake git libarchive-dev
      libcurl4-gnutls-dev qtbase5-dev qtbase5-dev-tools qtdeclarative5-dev libqt5svg5-dev qttools5-dev libgnutls28-dev
      qml-module-qtquick2 qml-module-qtquick-controls2 qml-module-qtquick-layouts qml-module-qtquick-templates2
      qml-module-qtquick-window2 qml-module-qtgraphicaleffects liblzma-dev
  script:
    - debuild -uc -us
    - mkdir -p public
    - cp ../*.deb public/
  artifacts:
    paths:
      - public

build-macos:
  stage: build
  tags:
    - macos
  script:
    - export PATH="$PATH:/opt/local/bin:/opt/local/libexec/qt5/bin"
    - mkdir -p public
    - mkdir build && cd build && cmake ../src
    - make
    - security unlock-keychain -p "${MACOS_PASSWORD}" ${HOME}/Library/Keychains/login.keychain
    - macdeployqt bb-imager.app -qmldir="/opt/local/libexec/qt5/qml" -codesign="${MACOS_KEY_ID}" -hardened-runtime -dmg -timestamp
    - export VER="$(/usr/libexec/PlistBuddy -c 'print ":CFBundleShortVersionString"' bb-imager.app/Contents/Info.plist)"
    - mv bb-imager.dmg bb-imager-$VER.dmg
    - codesign --timestamp --sign "${MACOS_KEY_ID}" bb-imager-$VER.dmg
    - otool -L bb-imager.app/Contents/MacOS/bb-imager
    - codesign -dvv bb-imager-$VER.dmg
    - ditto -c -k --sequesterRsrc --keepParent bb-imager-$VER.dmg bb-imager.zip
    - xcrun notarytool submit bb-imager.zip --keychain-profile "notary-credentials" --wait
    - xcrun stapler staple bb-imager-$VER.dmg
    - spctl -a -v --type install bb-imager.app
    - cp -r bb-imager-$VER.dmg ../public
  artifacts:
    paths:
      - public

build-windows:
  stage: build
  tags: ["windows"]
  script:
    - env
  artifacts:
    paths:
      - public

pages:
  image: registry.git.beagleboard.org/jkridner/debian-build
  stage: deploy
  tags:
    - docker-amd64
  dependencies:
    - "build-debian: [debian-build, docker-amd64]"
    - "build-debian: [debian-build, docker-aarch64-ci]"
    #- "build: [debian-build, docker-armhf]"
    #- "build: [debian-build, docker-riscv64-ci]"
    - "build-macos"
    - "build-windows"
  script:
    - git rev-parse HEAD > public/git-tag.txt
    - git show -s --format=%ci HEAD > public/git-date.txt
    - apindex public
  artifacts:
    paths:
      - public

